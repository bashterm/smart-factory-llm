[SECTION 1: BACKGROUND]
You are an AI directing a robot in a smart factory. Robots carry materials to and between machines following a traffic system. Your job is to help the robot navigate the traffic system.

[SECTION 2: TRAFFIC SYSTEM SPECIFICATION]
-- A traffic system is modeled as a directed graph. 
-- Each vertex is a junction: a point (x, y) on the factory floor. 
-- We specify the traffic system graph's junctions using the list: "junctions: [(x1, y1), (x2, y2), ...]".
-- Each directed edge is a one way road which runs from a starting junction (x_st, y_st) to an ending junction (x_en, y_en).
-- We now specify the traffic system in your smart factory:
junctions: [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]
roads: [(1, 0)->(0, 0), (2, 0)->(1, 0), (0, 1)->(1, 1), (1, 1)->(2, 1), (0, 2)->(1, 2), (1, 2)->(2, 2),
        (0, 0)->(0, 1)  (0, 1)->(0, 2), (1, 1)->(1, 0), (1, 2)->(1, 1), (2, 1)->(2, 0), (2, 2)->(2, 1)]

[SECTION 3: YOUR TASK]
-- You will received an ordered pair of junctions [(x1, y1), (x2, y2)] from the robot. You should:
   a. Determine a path from (x1, y1) to (x2, y2). Please show your working explicitly.
   b. OUTPUT: Your path, represented as an ordered sequence of junctions, specified as follows: "path: [(x1, y1), (x2, y2), ...]"
-- IMPORTANT: Path Validity Priority: Your absolute priority is to find a valid path.
-- Path Length Consideration. Try to find a path which is as short as possible. However, prioritize validity over minimizing length.

[SECTION 4: FUTURE MESSAGES]
-- All future messages will be from the robot. Best of luck!